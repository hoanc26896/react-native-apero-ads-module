buildscript {
  // Buildscript is evaluated before everything else so we can't use getExtOrDefault
  def kotlin_version = '1.4.10'
//    rootProject.ext.has('kotlinVersion') ? rootProject.ext.get('kotlinVersion') : project.properties['AperoAdsModule_kotlinVersion']

  repositories {
    google()
    mavenCentral()
    jcenter()
    maven {
      //IronSource
      url "https://android-sdk.is.com/"
    }
    maven { url 'https://jitpack.io' }
  }

  dependencies {
    classpath "com.android.tools.build:gradle:4.1.3"
    // noinspection DifferentKotlinGradleVersion
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

def getExtOrDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties['AperoAdsModule_' + name]
}

def getExtOrIntegerDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties['AperoAdsModule_' + name]).toInteger()
}

android {
  compileSdkVersion getExtOrIntegerDefault('compileSdkVersion')
  defaultConfig {
    minSdkVersion 21
    targetSdkVersion getExtOrIntegerDefault('targetSdkVersion')
    versionCode 1
    versionName "1.0"

  }

  buildTypes {
    release {
      minifyEnabled false
    }
  }
  lintOptions {
    disable 'GradleCompatible'
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}

repositories {
  mavenCentral()
  jcenter()
  google()
  maven {
    //IronSource
    url "https://android-sdk.is.com/"
  }
  maven { url 'https://jitpack.io' }

  def found = false
  def defaultDir = null
  def androidSourcesName = 'React Native sources'

  if (rootProject.ext.has('reactNativeAndroidRoot')) {
    defaultDir = rootProject.ext.get('reactNativeAndroidRoot')
  } else {
    defaultDir = new File(
            projectDir,
            '/../../../node_modules/react-native/android'
    )
  }

  if (defaultDir.exists()) {
    maven {
      url defaultDir.toString()
      name androidSourcesName
    }

    logger.info(":${project.name}:reactNativeAndroidRoot ${defaultDir.canonicalPath}")
    found = true
  } else {
    def parentDir = rootProject.projectDir

    1.upto(5, {
      if (found) return true
      parentDir = parentDir.parentFile

      def androidSourcesDir = new File(
              parentDir,
              'node_modules/react-native'
      )

      def androidPrebuiltBinaryDir = new File(
              parentDir,
              'node_modules/react-native/android'
      )

      if (androidPrebuiltBinaryDir.exists()) {
        maven {
          url androidPrebuiltBinaryDir.toString()
          name androidSourcesName
        }

        logger.info(":${project.name}:reactNativeAndroidRoot ${androidPrebuiltBinaryDir.canonicalPath}")
        found = true
      } else if (androidSourcesDir.exists()) {
        maven {
          url androidSourcesDir.toString()
          name androidSourcesName
        }

        logger.info(":${project.name}:reactNativeAndroidRoot ${androidSourcesDir.canonicalPath}")
        found = true
      }
    })
  }

  if (!found) {
    throw new GradleException(
            "${project.name}: unable to locate React Native android sources. " +
                    "Ensure you have you installed React Native as a dependency in your project and try again."
    )
  }
}

def kotlin_version = getExtOrDefault('kotlinVersion')

dependencies {
  // noinspection GradleDynamicVersion
  api 'com.facebook.react:react-native:+'
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  implementation fileTree(dir: 'libs', include: ['*.jar'])
//    implementation project(path: ':library')
  implementation 'androidx.appcompat:appcompat:1.2.0'
  implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
  implementation 'com.google.android.material:material:1.2.1'
  implementation 'androidx.recyclerview:recyclerview:1.1.0'
  implementation 'androidx.cardview:cardview:1.0.0'
  implementation 'com.google.android.gms:play-services-ads:20.4.0'
  implementation 'com.facebook.shimmer:shimmer:0.5.0'
//    implementation 'com.anjlab.android.iab.v3:library:1.1.0'
  implementation 'com.intuit.sdp:sdp-android:1.0.6'
  implementation 'androidx.lifecycle:lifecycle-process:2.2.0'
  implementation 'com.github.ybq:Android-SpinKit:1.4.0'
  implementation 'com.google.ads.mediation:facebook:6.7.0.0'
  implementation 'com.google.ads.mediation:adcolony:4.6.3.0'
  implementation 'com.google.ads.mediation:applovin:10.3.4.0'
  implementation 'androidx.legacy:legacy-support-v4:1.0.0'

  def lifecycle_version = "2.0.0"
  implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
  implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
  annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

  implementation platform('com.google.firebase:firebase-bom:28.0.1')
  implementation 'com.google.firebase:firebase-analytics'

  def multidex_version = "2.0.1"
  implementation "androidx.multidex:multidex:$multidex_version"
  def billing_version = "4.0.0"
  implementation "com.android.billingclient:billing:$billing_version"
  //adjust
  implementation 'com.adjust.sdk:adjust-android:4.28.9'
  implementation 'com.android.installreferrer:installreferrer:2.2'
  implementation 'com.google.android.gms:play-services-ads-identifier:18.0.1'


  //Add IronSource Mediation SDK dependency.
  implementation 'com.ironsource.sdk:mediationsdk:7.1.13'

  implementation 'com.google.android.gms:play-services-appset:16.0.0'
  implementation 'com.google.android.gms:play-services-basement:17.1.1'
  implementation "androidx.core:core-ktx:1.6.0"
  implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.0.0"
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

  //fb sdk
  implementation 'com.facebook.android:facebook-android-sdk:12.0.1'
  implementation 'androidx.annotation:annotation:1.0.0'
}
